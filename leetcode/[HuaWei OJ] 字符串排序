/**
 * Created by ml on 2017/7/28.
 */

import java.util.Scanner;

/**
编写一个程序，将输入字符串中的字符按如下规则排序。
        规则1：英文字母从A到Z排列，不区分大小写。
        如，输入：Type 输出：epTy
        规则2：同一个英文字母的大小写同时存在时，按照输入顺序排列。
        如，输入：BabA 输出：aABb
        规则3：非英文字母的其它字符保持原来的位置。
        如，输入：By?e 输出：Be?y
        样例：
        输入：
        A Famous Saying: Much Ado About Nothing(2012/8).
        输出：
        A aaAAbc dFgghh: iimM nNn oooos Sttuuuy (2012/8).
*/
public class strsort {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        strSort(input);
        sc.close();
    }

    public static void strSort(String input) {
        //1、提取
        char[] chars = input.toCharArray();
        StringBuffer sb = new StringBuffer();
        //2、排序（很赞的想法：最外层26次循环，相当于挖了26个坑，循环查找每一个符合的字符属于哪一个坑）
        for (int i = 0; i<26; i++) {
            //挖坑
            for (int j = 0; j<chars.length; j++) {
                if (isAplha(chars[j])) {
                    //对号入座
                    if (chars[j]-'a'== i || chars[j]-'A'== i) {
                        sb.append(chars[j]);
                    }
                }
            }
        }
        //3、覆盖
        for (int k = 0; k < chars.length; k++) {
            if (!isAplha(chars[k])) {
                sb.insert(k ,chars[k]);
            }
        }

        //输出
        System.out.println(sb.toString());
    }

    public static boolean isAplha(char s) {
        return (s >= 'a' && s <= 'z' || s >= 'A' && s <= 'Z');
    }
}
